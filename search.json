[{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ropengov.github.io/giscoR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"giscoR - Download Geospatial Data from GISCO API (Eurostat). Copyright (C) 2020 Diego Hernangómez  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. giscoR Copyright (C) 2020 Diego Hernangómez This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ropengov.github.io/giscoR/articles/giscoR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Get started with giscoR","text":"Full site examples vignettes https://ropengov.github.io/giscoR/ giscoR package designed provide clean interaction GISCO API. Within Eurostat, GISCO responsible meeting European Commission’s geographical information needs 3 levels: European Union, member countries, regions. GISCO also provides variety shapefiles different formats, focusing specially European Union area, providing also worldwide shapefiles, country polygons, labels borders coastal lines. GISCO provides data different resolutions suitable representing small areas (01M, 03M) well lightweight datasets specially useful representing wider areas (10M, 20M, 60M). Shapefiles provided 3 different projections: EPSG 4326, 3035 3857. giscoR returns sf objects, sf package necessary.","code":""},{"path":"https://ropengov.github.io/giscoR/articles/giscoR.html","id":"caching","dir":"Articles","previous_headings":"","what":"Caching","title":"Get started with giscoR","text":"giscoR provides dataset caching capability, set : file available locally, downloaded directory next time need corresponding data loaded local directory. experience problems downloading, can also manually download file GISCO API website store local directory.","code":"gisco_set_cache_dir(\"./path/to/location\")"},{"path":"https://ropengov.github.io/giscoR/articles/giscoR.html","id":"downloading-data","dir":"Articles","previous_headings":"","what":"Downloading data","title":"Get started with giscoR","text":"Please aware downloading provisions apply using GISCO data. function, gisco_attributions guide topic. also provides attributions several languages.","code":"library(giscoR) gisco_attributions(copyright = TRUE) #>  #>     COPYRIGHT NOTICE #>  #>     When data downloaded from GISCO #>     is used in any printed or electronic publication, #>     in addition to any other provisions applicable to #>     the whole Eurostat website, data source will have #>     to be acknowledged in the legend of the map and in #>     the introductory page of the publication with the #>     following copyright notice: #>  #>     - EN: (C) EuroGeographics for the administrative boundaries #>     - FR: (C) EuroGeographics pour les limites administratives #>     - DE: (C) EuroGeographics bezuglich der Verwaltungsgrenzen #>  #>     For publications in languages other than English, #>     French or German, the translation of the copyright #>     notice in the language of the publication shall be #>     used. #>  #>     If you intend to use the data commercially, please #>     contact EuroGeographics for information regarding #>     their licence agreements. #>  #>  #> [1] \"© EuroGeographics for the administrative boundaries\""},{"path":"https://ropengov.github.io/giscoR/articles/giscoR.html","id":"basic-example","dir":"Articles","previous_headings":"","what":"Basic example","title":"Get started with giscoR","text":"examples data downloads  can select specific countries name (language), ISO 3 codes Eurostat codes. restriction can’t mix country names, ISO3 Eurostat codes one single call. possible also combine different shapefiles, just set resolution epsg (optionally year) value:","code":"library(sf) library(ggplot2) # Use ggplot for plotting   Asia <- gisco_get_countries(region = \"Asia\")   ggplot(Asia) +   geom_sf(fill = \"cornsilk\", color = \"#887e6a\") +   theme(     panel.background = element_rect(fill = \"#fffff3\"),     panel.border = element_rect(       colour = \"#887e6a\",       fill = NA,       size = 1.5     ),     axis.text = element_text(       family = \"serif\",       colour = \"#887e6a\",       face = \"bold\"     )   ) africa_north <-   gisco_get_countries(     country = c(\"Morocco\", \"Argelia\", \"Libia\", \"Tunisia\", \"Egypt\"),     resolution = \"20\",     epsg = \"4326\",     year = \"2016\"   )  # Coastal lines  coast <- gisco_get_coastallines(   resolution = \"20\",   epsg = \"4326\",   year = \"2016\" )  # Plot  ggplot(coast) +   geom_sf(color = \"grey80\") +   geom_sf(data = africa_north, fill = \"grey30\", color = \"white\") +   coord_sf(     xlim = c(-13, 37),     ylim = c(18.5, 40)   ) +   theme(     axis.ticks = element_blank(),     axis.text = element_blank()   ) +   facet_wrap(vars(NAME_ENGL), ncol = 2)"},{"path":"https://ropengov.github.io/giscoR/articles/giscoR.html","id":"plotting-giscor","dir":"Articles","previous_headings":"","what":"Plotting giscoR","title":"Get started with giscoR","text":"example giscoR can play nicely Eurostat data. plotting purposes use ggplot2 package however package handles sf objects (e.g. tmap, mapsf, leaflet, etc. used). Also colorspace rcartocolor packages recommended, provide great color palettes.","code":"# EU members plus UK  eu2016 <- c(\"UK\", gisco_countrycode[gisco_countrycode$eu, ]$CNTR_CODE)  nuts2 <- gisco_get_nuts(   year = \"2016\",   epsg = \"3035\",   resolution = \"3\",   nuts_level = \"2\",   country = eu2016 )  # Borders borders <- gisco_get_countries(   epsg = \"3035\",   year = \"2016\",   resolution = \"3\",   country = eu2016 )  # Eurostat data - Purchase parity power pps <- giscoR::tgs00026 pps <- pps[pps$time == 2016, ]  # Breaks br <- c(0, seq(10, 25, 2.5), 1000) * 1000  nuts2.sf <- merge(nuts2,   pps,   by.x = \"NUTS_ID\",   by.y = \"geo\",   all.x = TRUE )  # Cut nuts2.sf$values_groups <- cut(nuts2.sf$values, breaks = br)  # Labels labels <- paste0(br / 1000, \"k\")[-1] labels[1] <- \"<10k\" labels[8] <- \">25k\"  # Plot pal <- hcl.colors(8, \"Spectral\", alpha = 0.8)  ggplot(nuts2.sf) +   geom_sf(aes(fill = values_groups), color = NA, alpha = 0.9) +   geom_sf(data = borders, fill = NA, size = 0.1, col = \"grey30\") +   # Center in Europe: EPSG 3035   coord_sf(     xlim = c(2377294, 6500000),     ylim = c(1413597, 5228510)   ) +   labs(     title = \"Disposable Incoming Households (2016)\",     subtitle = \"NUTS-2 level\",     caption = paste0(       \"Source: Eurostat\\n \", gisco_attributions()     )   ) +   scale_fill_manual(     name = \"euros\",     values = pal,     drop = FALSE,     na.value = \"black\",     labels = labels,     guide = guide_legend(       direction = \"horizontal\",       keyheight = 0.5,       keywidth = 2,       title.position = \"top\",       title.hjust = 0,       label.hjust = .5,       nrow = 1,       byrow = TRUE,       reverse = FALSE,       label.position = \"bottom\"     )   ) +   theme_void() +   # Theme   theme(     plot.background = element_rect(fill = \"black\"),     plot.title = element_text(       color = \"grey90\",       hjust = 0.5,       vjust = -1,     ),     plot.subtitle = element_text(       color = \"grey90\",       hjust = 0.5,       vjust = -2,       face = \"bold\"     ),     plot.caption = element_text(       color = \"grey90\",       size = 6,       hjust = 0.5,       margin = margin(b = 2, t = 13)     ),     legend.text = element_text(       size = 7,       color = \"grey90\"     ),     legend.title = element_text(       size = 7,       color = \"grey90\"     ),     legend.position = c(0.5, 0.02)   )"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://ropengov.github.io/giscoR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Diego Hernangómez. Author, maintainer, copyright holder.            rOpenGov EuroGeographics. Copyright holder.            administrative boundaries. Vincent Arel-Bundock. Copyright holder.            gisco_countrycode dataset.","code":""},{"path":"https://ropengov.github.io/giscoR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hernangomez D (2023). giscoR: Download Map Data GISCO API - Eurostat. <https://doi.org/10.5281/zenodo.4317946>, <https://ropengov.github.io/giscoR/>","code":"@Manual{R-giscoR,   title = {{giscoR}: Download Map Data from GISCO API - Eurostat},   doi = {10.5281/zenodo.4317946},   author = {Diego Hernangómez},   year = {2023},   version = {0.3.3},   url = {https://ropengov.github.io/giscoR/},   abstract = {Tools to download data from the GISCO (Geographic Information System of the Commission) Eurostat database . Global and European map data available. This package is in no way officially related to or endorsed by Eurostat.}, }"},{"path":"https://ropengov.github.io/giscoR/index.html","id":"giscor-","dir":"","previous_headings":"","what":"giscoR | R package for download geodata from GISCO - Eurostat","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"giscoR API package helps retrieve data Eurostat - GISCO (Geographic Information System COmmission). also provides lightweight data sets ready use without downloading. GISCO (FAQ) geospatial open data repository including several data sets countries, coastal lines, labels NUTS levels. data sets usually provided several resolution levels (60M/20M/10M/03M/01M) 3 different projections (4326/3035/3857). Note package provide metadata downloaded files, information available API webpage. Full site examples vignettes https://ropengov.github.io/giscoR/","code":""},{"path":"https://ropengov.github.io/giscoR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"Install giscoR CRAN: can install developing version giscoR : Alternatively, can install giscoR using r-universe:","code":"install.packages(\"giscoR\") library(remotes) install_github(\"rOpenGov/giscoR\") # Enable this universe options(repos = c(   ropengov = \"https://ropengov.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\" ))   install.packages(\"giscoR\")"},{"path":"https://ropengov.github.io/giscoR/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"script highlights features giscoR:","code":"library(giscoR) library(sf) library(dplyr)  # Different resolutions DNK_res60 <- gisco_get_countries(resolution = \"60\", country = \"DNK\") %>%   mutate(res = \"60M\") DNK_res20 <-   gisco_get_countries(resolution = \"20\", country = \"DNK\") %>%   mutate(res = \"20M\") DNK_res10 <-   gisco_get_countries(resolution = \"10\", country = \"DNK\") %>%   mutate(res = \"10M\") DNK_res03 <-   gisco_get_countries(resolution = \"03\", country = \"DNK\") %>%   mutate(res = \"03M\")   DNK_all <- bind_rows(DNK_res60, DNK_res20, DNK_res10, DNK_res03)  # Plot ggplot2  library(ggplot2)  ggplot(DNK_all) +   geom_sf(fill = \"tomato\") +   facet_wrap(vars(res)) +   theme_minimal() # Labels and Lines available  labs <- gisco_get_countries(   spatialtype = \"LB\",   region = \"Africa\",   epsg = \"3857\" )  coast <- gisco_get_countries(   spatialtype = \"COASTL\",   epsg = \"3857\" )  # For zooming afr_bbox <- st_bbox(labs)  ggplot(coast) +   geom_sf(col = \"deepskyblue4\", linewidth = 3) +   geom_sf(data = labs, fill = \"springgreen4\", col = \"darkgoldenrod1\", size = 5, shape = 21) +   coord_sf(     xlim = afr_bbox[c(\"xmin\", \"xmax\")],     ylim = afr_bbox[c(\"ymin\", \"ymax\")]   )"},{"path":"https://ropengov.github.io/giscoR/index.html","id":"labels","dir":"","previous_headings":"Usage","what":"Labels","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"example labeled map using ggplot2:","code":"ITA <- gisco_get_nuts(country = \"Italy\", nuts_level = 1)  ggplot(ITA) +   geom_sf() +   geom_sf_text(aes(label = NAME_LATN)) +   theme(axis.title = element_blank())"},{"path":"https://ropengov.github.io/giscoR/index.html","id":"thematic-maps","dir":"","previous_headings":"Usage","what":"Thematic maps","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"example thematic map plotted ggplot2 package. information extracted via eurostat package. follow fantastic approach presented Milos Popovic post:","code":"# Get shapes nuts3 <- gisco_get_nuts(   year = \"2016\",   epsg = \"3035\",   resolution = \"3\",   nuts_level = \"3\" )  # Group by NUTS by country and convert to lines country_lines <- nuts3 %>%   group_by(     CNTR_CODE   ) %>%   summarise(n = n()) %>%   st_cast(\"MULTILINESTRING\")   # Use eurostat library(eurostat)  popdens <- get_eurostat(\"demo_r_d3dens\") popdens <- popdens[popdens$time == \"2018-01-01\", ]   # Merge data nuts3.sf <- merge(nuts3,   popdens,   by.x = \"NUTS_ID\",   by.y = \"geo\",   all.x = TRUE )  # Breaks and labels  br <- c(0, 25, 50, 100, 200, 500, 1000, 2500, 5000, 10000, 30000)  nuts3.sf$values_cut <- cut(nuts3.sf$values,   breaks = br,   dig.lab = 5 )  labs_plot <- prettyNum(br[-1], big.mark = \",\")   # Palette pal <- hcl.colors(length(br) - 1, \"Lajolla\")   # Plot  ggplot(nuts3.sf) +   geom_sf(aes(fill = values_cut), linewidth = 0, color = NA, alpha = 0.9) +   geom_sf(data = country_lines, col = \"black\", linewidth = 0.1) +   # Center in Europe: EPSG 3035   coord_sf(     xlim = c(2377294, 7453440),     ylim = c(1313597, 5628510)   ) +   labs(     title = \"Population density in 2018\",     subtitle = \"NUTS-3 level\",     caption = paste0(       \"Source: Eurostat, \", gisco_attributions(),       \"\\nBased on Milos Popovic: https://milospopovic.net/how-to-make-choropleth-map-in-r/\"     )   ) +   scale_fill_manual(     name = \"people per sq. kilometer\",     values = pal,     labels = labs_plot,     drop = FALSE,     guide = guide_legend(       direction = \"horizontal\",       keyheight = 0.5,       keywidth = 2.5,       title.position = \"top\",       title.hjust = 0.5,       label.hjust = .5,       nrow = 1,       byrow = TRUE,       reverse = FALSE,       label.position = \"bottom\"     )   ) +   theme_void() +   # Theme   theme(     plot.title = element_text(       size = 20, color = pal[length(pal) - 1],       hjust = 0.5, vjust = -6     ),     plot.subtitle = element_text(       size = 14,       color = pal[length(pal) - 1],       hjust = 0.5, vjust = -10, face = \"bold\"     ),     plot.caption = element_text(       size = 9, color = \"grey60\",       hjust = 0.5, vjust = 0,       margin = margin(t = 5, b = 10)     ),     legend.text = element_text(       size = 10,       color = \"grey20\"     ),     legend.title = element_text(       size = 11,       color = \"grey20\"     ),     legend.position = \"bottom\"   )"},{"path":"https://ropengov.github.io/giscoR/index.html","id":"a-note-on-caching","dir":"","previous_headings":"","what":"A note on caching","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"data sets (Local Administrative Units - LAU, high-resolution files) may size larger 50MB. can use giscoR create local repository given local directory passing following function: can also download manually files (.geojson format) store local directory.","code":"gisco_set_cache_dir(\"./path/to/location\")"},{"path":[]},{"path":"https://ropengov.github.io/giscoR/index.html","id":"api-data-packages","dir":"","previous_headings":"Recommended packages","what":"API data packages","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"eurostat package (https://ropengov.github.io/eurostat/). API package provides access open data Eurostat.","code":""},{"path":"https://ropengov.github.io/giscoR/index.html","id":"plotting-sf-objects","dir":"","previous_headings":"Recommended packages","what":"Plotting sf objects","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"packages recommended visualization : tmap ggplot2 + ggspatial mapsf leaflet","code":""},{"path":"https://ropengov.github.io/giscoR/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"Check GitHub page source code. Contributions welcome: Use issue tracker feedback bug reports. Send pull requests Star us GitHub page","code":""},{"path":"https://ropengov.github.io/giscoR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"cite ‘giscoR’ publications use: Hernangomez D (2023). giscoR: Download Map Data GISCO API - Eurostat. https://doi.org/10.5281/zenodo.4317946, https://ropengov.github.io/giscoR/ BibTeX entry LaTeX users ","code":"@Manual{R-giscoR,   title = {{giscoR}: Download Map Data from GISCO API - Eurostat},   doi = {10.5281/zenodo.4317946},   author = {Diego Hernangómez},   year = {2023},   version = {0.3.3},   url = {https://ropengov.github.io/giscoR/},   abstract = {Tools to download data from the GISCO (Geographic Information System of the Commission) Eurostat database <https://ec.europa.eu/eurostat/web/gisco>. Global and European map data available. This package is in no way officially related to or endorsed by Eurostat.}, }"},{"path":"https://ropengov.github.io/giscoR/index.html","id":"copyright-notice","dir":"","previous_headings":"","what":"Copyright notice","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"GISCO > Geodata > Reference data > Administrative Units / Statistical Units data downloaded page used printed electronic publication, addition provisions applicable whole Eurostat website, data source acknowledged legend map introductory page publication following copyright notice: EN: © EuroGeographics administrative boundaries FR: © EuroGeographics pour les limites administratives DE: © EuroGeographics bezüglich der Verwaltungsgrenzen publications languages English, French German, translation copyright notice language publication shall used. intend use data commercially, please contact EuroGeographics information regarding license agreements.","code":""},{"path":"https://ropengov.github.io/giscoR/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"giscoR | R package for download geodata from GISCO - Eurostat","text":"package way officially related endorsed Eurostat.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/giscoR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"giscoR: Download Map Data from GISCO API - Eurostat — giscoR-package","title":"giscoR: Download Map Data from GISCO API - Eurostat — giscoR-package","text":"Tools download data GISCO (Geographic Information System Commission) Eurostat database https://ec.europa.eu/eurostat/web/gisco. Global European map data available. package way officially related endorsed Eurostat.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/giscoR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"giscoR: Download Map Data from GISCO API - Eurostat — giscoR-package","text":"Maintainer: Diego Hernangómez diego.hernangomezherrero@gmail.com (ORCID) (rOpenGov) [copyright holder] contributors: EuroGeographics (administrative boundaries.) [copyright holder] Vincent Arel-Bundock (ORCID) (gisco_countrycode dataset.) [copyright holder]","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_attributions.html","id":null,"dir":"Reference","previous_headings":"","what":"Attribution when publishing GISCO data — gisco_attributions","title":"Attribution when publishing GISCO data — gisco_attributions","text":"Get legal text used along data downloaded package","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_attributions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribution when publishing GISCO data — gisco_attributions","text":"","code":"gisco_attributions(lang = \"en\", copyright = FALSE)"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_attributions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attribution when publishing GISCO data — gisco_attributions","text":"lang Language (two-letter ISO code). See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes Details. copyright Boolean. Whether display copyright notice console.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_attributions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attribution when publishing GISCO data — gisco_attributions","text":"string attribution used.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_attributions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attribution when publishing GISCO data — gisco_attributions","text":"Current languages supported : \"en\" - English \"da\" - Danish \"de\" - German \"es\" - Spanish \"fi\" - Finish \"fr\" - French \"\" - Norwegian \"sv\" - Swedish Please consider contributing spot mistake want add new language.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_attributions.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Attribution when publishing GISCO data — gisco_attributions","text":"COPYRIGHT NOTICE data downloaded GISCO used printed electronic publication, addition provisions applicable whole Eurostat website, data source acknowledged legend map introductory page publication following copyright notice: EN: (C) EuroGeographics administrative boundaries FR: (C) EuroGeographics pour les limites administratives DE: (C) EuroGeographics bezuglich der Verwaltungsgrenzen publications languages English, French German, translation copyright notice language publication shall used. intend use data commercially, please contact EuroGeographics information regarding licence agreements.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_attributions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attribution when publishing GISCO data — gisco_attributions","text":"","code":"gisco_attributions() #> [1] \"© EuroGeographics for the administrative boundaries\"  gisco_attributions(lang = \"es\", copyright = TRUE) #>  #>     COPYRIGHT NOTICE #>  #>     When data downloaded from GISCO #>     is used in any printed or electronic publication, #>     in addition to any other provisions applicable to #>     the whole Eurostat website, data source will have #>     to be acknowledged in the legend of the map and in #>     the introductory page of the publication with the #>     following copyright notice: #>  #>     - EN: (C) EuroGeographics for the administrative boundaries #>     - FR: (C) EuroGeographics pour les limites administratives #>     - DE: (C) EuroGeographics bezuglich der Verwaltungsgrenzen #>  #>     For publications in languages other than English, #>     French or German, the translation of the copyright #>     notice in the language of the publication shall be #>     used. #>  #>     If you intend to use the data commercially, please #>     contact EuroGeographics for information regarding #>     their licence agreements. #>  #>        #> [1] \"© Eurogeographics para los límites administrativos\"  gisco_attributions(lang = \"XXX\") #> Language xxx not supported, switching to English.  #> Consider contributing:  #> https://github.com/rOpenGov/giscoR/issues #> [1] \"© EuroGeographics for the administrative boundaries\""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_bulk_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk download from GISCO API — gisco_bulk_download","title":"Bulk download from GISCO API — gisco_bulk_download","text":"Downloads zipped data GISCO extract cache_dir folder.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_bulk_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk download from GISCO API — gisco_bulk_download","text":"","code":"gisco_bulk_download(   id_giscoR = \"countries\",   year = \"2016\",   cache_dir = NULL,   update_cache = FALSE,   verbose = FALSE,   resolution = \"10\",   ext = \"geojson\",   recursive = TRUE )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_bulk_download.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Bulk download from GISCO API — gisco_bulk_download","text":"https://gisco-services.ec.europa.eu/distribution/v2/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_bulk_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk download from GISCO API — gisco_bulk_download","text":"id_giscoR Type dataset downloaded. Values supported : \"coastallines\" \"communes\" \"countries\" \"lau\" \"nuts\" \"urban_audit\" year Release year file. See Details cache_dir path cache directory. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. verbose Logical, displays information. Useful debugging, default FALSE. resolution Resolution geospatial data. One \"60\": 1:60million \"20\": 1:20million \"10\": 1:10million \"03\": 1:3million \"01\": 1:1million ext Extension file(s) downloaded. Formats available \"geojson\", \"shp\", \"svg\", \"json\", \"gdb\". See Details. recursive Tries unzip recursively zip files () included initial bulk download (case ext = \"shp\").","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_bulk_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bulk download from GISCO API — gisco_bulk_download","text":"Silent function.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_bulk_download.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bulk download from GISCO API — gisco_bulk_download","text":"See years available corresponding functions: gisco_get_coastallines() gisco_get_communes() gisco_get_countries() gisco_get_lau() gisco_get_nuts() gisco_get_urban_audit() usual extension used across giscoR \"geojson\", however formats already available GISCO.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_bulk_download.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Bulk download from GISCO API — gisco_bulk_download","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_bulk_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bulk download from GISCO API — gisco_bulk_download","text":"","code":"# \\dontrun{  # Countries 2016 - It would take some time gisco_bulk_download(id_giscoR = \"countries\", resolution = \"60\") # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_check_access.html","id":null,"dir":"Reference","previous_headings":"","what":"Check access to GISCO API — gisco_check_access","title":"Check access to GISCO API — gisco_check_access","text":"Check R access resources https://gisco-services.ec.europa.eu/distribution/v2/.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_check_access.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check access to GISCO API — gisco_check_access","text":"","code":"gisco_check_access()"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_check_access.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check access to GISCO API — gisco_check_access","text":"logical.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_check_access.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check access to GISCO API — gisco_check_access","text":"","code":"gisco_check_access() #> [1] TRUE"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear your giscoR cache dir — gisco_clear_cache","title":"Clear your giscoR cache dir — gisco_clear_cache","text":"Use function caution. function clear cached data configuration, specifically: Deletes giscoR config directory (rappdirs::user_config_dir(\"giscoR\", \"R\")). Deletes cache_dir directory. Deletes values stored Sys.getenv(\"GISCO_CACHE_DIR\") options(gisco_cache_dir).","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear your giscoR cache dir — gisco_clear_cache","text":"","code":"gisco_clear_cache(config = FALSE, cached_data = TRUE, verbose = FALSE)"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_clear_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear your giscoR cache dir — gisco_clear_cache","text":"config TRUE, delete configuration folder giscoR. cached_data set TRUE, delete cache_dir content. verbose Logical, displays information. Useful debugging, default FALSE.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_clear_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear your giscoR cache dir — gisco_clear_cache","text":"Invisible. function called side effects.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_clear_cache.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clear your giscoR cache dir — gisco_clear_cache","text":"overkill function intended reset status never installed /used giscoR.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_clear_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear your giscoR cache dir — gisco_clear_cache","text":"","code":"# Don't run this! It would modify your current state # \\dontrun{ gisco_clear_cache(verbose = TRUE) #> giscoR cached data deleted:  /tmp/RtmpxHuSGi/giscoR  Sys.getenv(\"GISCO_CACHE_DIR\") #> [1] \"\"  # Set new cache on a temp dir newcache <- file.path(tempdir(), \"giscoR\", \"pkgdown\")  newcache #> [1] \"/tmp/RtmpxHuSGi/giscoR/pkgdown\"  gisco_set_cache_dir(newcache) #> giscoR cache dir is:  /tmp/RtmpxHuSGi/giscoR/pkgdown #> To install your cache_dir path for use in future sessions,  #> run this function with `install = TRUE`.  Sys.getenv(\"GISCO_CACHE_DIR\") #> [1] \"/tmp/RtmpxHuSGi/giscoR/pkgdown\" # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_coastallines.html","id":null,"dir":"Reference","previous_headings":"","what":"World coastal lines POLYGON object — gisco_coastallines","title":"World coastal lines POLYGON object — gisco_coastallines","text":"sf object provided GISCO (2016 version).","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_coastallines.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World coastal lines POLYGON object — gisco_coastallines","text":"POLYGON data frame (resolution: 1:20million, EPSG:4326) object 3 variables: FID COAS_ID geometry: geometry field","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_coastallines.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World coastal lines POLYGON object — gisco_coastallines","text":"COAS_RG_20M_2016_4326.geojson file.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_coastallines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"World coastal lines POLYGON object — gisco_coastallines","text":"","code":"coasts <- gisco_coastallines  library(ggplot2)  ggplot(coasts) +   geom_sf(color = \"blue\", fill = \"blue\", alpha = 0.2) +   # Zoom on Oceania   coord_sf(     xlim = c(96, 179),     ylim = c(-51, 11)   ) +   theme_minimal() +   theme(     plot.background = element_rect(       fill = \"black\",       color = \"black\"     ),     panel.grid = element_blank(),     axis.text = element_text(colour = \"grey90\")   )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_countries.html","id":null,"dir":"Reference","previous_headings":"","what":"World countries POLYGON object — gisco_countries","title":"World countries POLYGON object — gisco_countries","text":"sf object including countries provided GISCO (2016 version).","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_countries.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World countries POLYGON object — gisco_countries","text":"MULTIPOLYGON data frame (resolution: 1:20million, EPSG:4326) object 257 rows 7 variables: id: row ID CNTR_NAME: Official country name local language ISO3_CODE: ISO 3166-1 alpha-3 code country, provided GISCO CNTR_ID: Country ID NAME_ENGL: Country name English FID: FID geometry: geometry field","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_countries.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World countries POLYGON object — gisco_countries","text":"CNTR_RG_20M_2016_4326.geojson file.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_countries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"World countries POLYGON object — gisco_countries","text":"","code":"cntry <- gisco_countries GBR <- subset(cntry, ISO3_CODE == \"GBR\")  library(ggplot2)  ggplot(GBR) +   geom_sf(color = \"red3\", fill = \"blue4\") +   theme_void()"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_countrycode.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataframe with different country code schemes and world regions — gisco_countrycode","title":"Dataframe with different country code schemes and world regions — gisco_countrycode","text":"dataframe containing conversions different country code schemes (Eurostat/ISO2 3) well geographic regions provided World Bank UN (M49). dataset extracted countrycode package.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_countrycode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataframe with different country code schemes and world regions — gisco_countrycode","text":"data frame object 249 rows 12 variables: CNTR_CODE: Eurostat code country iso2c: ISO 3166-1 alpha-2 code country ISO3_CODE: ISO 3166-1 alpha-3 code country iso.name.en: ISO English short name cldr.short.en: English short name provided Unicode Common Locale Data Repository https://cldr.unicode.org/translation/displaynames/countryregion-territory-names continent: provided World Bank un.region.code: Numeric region code UN (M49) un.region.name: Region name UN (M49) un.regionintermediate.code: Numeric intermediate Region code UN (M49) un.regionintermediate.name: Intermediate Region name UN (M49) un.regionsub.code: Numeric sub-region code UN (M49) un.regionsub.name: Sub-Region name UN (M49) eu: Logical indicating country belongs European Union per February 2021.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_countrycode.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dataframe with different country code schemes and world regions — gisco_countrycode","text":"countrycode::codelist v1.2.0.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_countrycode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataframe with different country code schemes and world regions — gisco_countrycode","text":"","code":"data(gisco_countrycode)"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_db.html","id":null,"dir":"Reference","previous_headings":"","what":"GISCO database — gisco_db","title":"GISCO database — gisco_db","text":"Database list files package can load.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_db.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GISCO database — gisco_db","text":"data frame","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_db.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GISCO database — gisco_db","text":"GISCO API datasets.json.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GISCO database — gisco_db","text":"dataframe used check validity API calls.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GISCO database — gisco_db","text":"","code":"data(gisco_db)"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"Returns world country polygons, lines points specified scale, provided GISCO. Also, specific areas Gibraltar Antarctica presented separately. definition country used GISCO correspond roughly territories official ISO-3166 code.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"","code":"gisco_get_countries(   year = \"2016\",   epsg = \"4326\",   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   verbose = FALSE,   resolution = \"20\",   spatialtype = \"RG\",   country = NULL,   region = NULL )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"https://gisco-services.ec.europa.eu/distribution/v2/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"year Release year file. One \"2001\", \"2006\", \"2010\", \"2013\", \"2016\" \"2020\". epsg projection map: 4-digit EPSG code. One : \"4258\": ETRS89 \"4326\": WGS84 \"3035\": ETRS89 / ETRS-LAEA \"3857\": Pseudo-Mercator cache logical whether caching. Default TRUE. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. cache_dir path cache directory. See caching. verbose Logical, displays information. Useful debugging, default FALSE. resolution Resolution geospatial data. One \"60\": 1:60million \"20\": 1:20million \"10\": 1:10million \"03\": 1:3million \"01\": 1:1million spatialtype Type geometry returned: \"BN\": Boundaries - LINESTRING object. \"COASTL\": coastlines - LINESTRING object. \"INLAND\": inland boundaries - LINESTRING object. \"LB\": Labels - POINT object. \"RG\": Regions - MULTIPOLYGON/POLYGON object. country Optional. character vector country codes. either vector country names, vector ISO3 country codes vector Eurostat country codes. Mixed types (c(\"Turkey\",\"US\",\"FRA\")) work. See also countrycode::countrycode(). region Optional. character vector UN M49 region codes European Union membership. Possible values \"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\" \"EU\" countries belonging European Union (per 2021). See world regions gisco_countrycode","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"sf object specified spatialtype.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"Please check download usage provisions gisco_attributions().","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":"world-regions","dir":"Reference","previous_headings":"","what":"World Regions","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"Regions defined per geographic regions defined UN (see https://unstats.un.org/unsd/methodology/m49/. scheme Cyprus assigned Asia. may use region = \"EU\" get EU members (reference date: 2021).","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GISCO world country sf polygons, points and lines — gisco_get_countries","text":"","code":"cntries <- gisco_get_countries()  library(ggplot2) ggplot(cntries) +   geom_sf()   # Get a region  africa <- gisco_get_countries(region = \"Africa\") ggplot(africa) +   geom_sf(fill = \"#078930\", col = \"white\") +   theme_minimal()  # \\donttest{ if (gisco_check_access()) {   # Extract points   asia_pol <- gisco_get_countries(region = \"Asia\", resolution = \"3\")   asia_lb <- gisco_get_countries(spatialtype = \"LB\", region = \"Asia\")   ggplot(asia_pol) +     geom_sf(fill = \"gold3\") +     geom_sf(data = asia_lb, color = \"#007FFF\") }  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_airports.html","id":null,"dir":"Reference","previous_headings":"","what":"Get location of airports and ports from GISCO API — gisco_get_airports","title":"Get location of airports and ports from GISCO API — gisco_get_airports","text":"Loads sf object GISCO API local library.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_airports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get location of airports and ports from GISCO API — gisco_get_airports","text":"","code":"gisco_get_airports(   year = \"2013\",   country = NULL,   cache_dir = NULL,   update_cache = FALSE,   verbose = FALSE )  gisco_get_ports(   year = \"2013\",   country = NULL,   cache_dir = NULL,   update_cache = FALSE,   verbose = FALSE )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_airports.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get location of airports and ports from GISCO API — gisco_get_airports","text":"https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/transport-networks","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_airports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get location of airports and ports from GISCO API — gisco_get_airports","text":"year Year reference. year available right now \"2013\". country Optional. character vector country codes. either vector country names, vector ISO3 country codes vector Eurostat country codes. Mixed types (c(\"Turkey\",\"US\",\"FRA\")) work. See also countrycode::countrycode(). cache_dir path cache directory. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. verbose Logical, displays information. Useful debugging, default FALSE.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_airports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get location of airports and ports from GISCO API — gisco_get_airports","text":"POINT object EPSG:4326.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_airports.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get location of airports and ports from GISCO API — gisco_get_airports","text":"gisco_get_airports() refer Europe. shapefiles provided EPSG:4326. gisco_get_ports() adds new field CNTR_ISO2 original data identifying country port. Worldwide information available. port codes aligned UN/LOCODE standard.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_airports.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get location of airports and ports from GISCO API — gisco_get_airports","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_airports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get location of airports and ports from GISCO API — gisco_get_airports","text":"","code":"# \\donttest{ library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE  Greece <- gisco_get_countries(country = \"EL\", resolution = \"1\") AirP_GC <- gisco_get_airports(country = \"EL\") AirP_GC <- st_transform(AirP_GC, st_crs(Greece))  library(ggplot2)   ggplot(Greece) +   geom_sf(fill = \"grey80\") +   geom_sf(data = AirP_GC, color = \"blue\") +   labs(     title = \"Airports on Greece\",     shape = NULL,     color = NULL,     caption = gisco_attributions()   )    ############################## #         Plot ports         # ##############################  ports <- gisco_get_ports() coast <- gisco_get_coastallines(year = 2013)  # To Equal Earth projection :)  library(sf) coast <- st_transform(coast, 8857) ports <- st_transform(ports, st_crs(coast))   ggplot(coast) +   geom_sf(fill = \"#F6E1B9\", color = \"#0978AB\") +   geom_sf(data = ports, fill = \"red\", shape = 21) +   theme_void() +   theme(     panel.background = element_rect(fill = \"#C6ECFF\"),     panel.grid = element_blank(),     plot.title = element_text(face = \"bold\", hjust = 0.5),     plot.subtitle = element_text(face = \"italic\", hjust = 0.5)   ) +   labs(     title = \"Ports Worldwide\", subtitle = \"Year 2013\",     caption = \"(c) European Union, 1995 - today\"   )  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_coastallines.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GISCO coastlines sf polygons — gisco_get_coastallines","title":"Get GISCO coastlines sf polygons — gisco_get_coastallines","text":"Downloads worldwide coastlines","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_coastallines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GISCO coastlines sf polygons — gisco_get_coastallines","text":"","code":"gisco_get_coastallines(   year = \"2016\",   epsg = \"4326\",   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   verbose = FALSE,   resolution = \"20\" )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_coastallines.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get GISCO coastlines sf polygons — gisco_get_coastallines","text":"https://gisco-services.ec.europa.eu/distribution/v2/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_coastallines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GISCO coastlines sf polygons — gisco_get_coastallines","text":"year Release year. One \"2006\", \"2010\", \"2013\" \"2016\" epsg projection map: 4-digit EPSG code. One : \"4258\": ETRS89 \"4326\": WGS84 \"3035\": ETRS89 / ETRS-LAEA \"3857\": Pseudo-Mercator cache logical whether caching. Default TRUE. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. cache_dir path cache directory. See caching. verbose Logical, displays information. Useful debugging, default FALSE. resolution Resolution geospatial data. One \"60\": 1:60million \"20\": 1:20million \"10\": 1:10million \"03\": 1:3million \"01\": 1:1million","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_coastallines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GISCO coastlines sf polygons — gisco_get_coastallines","text":"sf  POLYGON object.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_coastallines.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get GISCO coastlines sf polygons — gisco_get_coastallines","text":"Please check download usage provisions gisco_attributions().","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_coastallines.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get GISCO coastlines sf polygons — gisco_get_coastallines","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_coastallines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GISCO coastlines sf polygons — gisco_get_coastallines","text":"","code":"coast <- gisco_get_coastallines()  library(ggplot2)  ggplot(coast) +   geom_sf(color = \"#1278AB\", fill = \"#FDFBEA\") +   # Zoom on Caribe   coord_sf(     xlim = c(-99, -49),     ylim = c(4, 30)   ) +   theme_minimal() +   theme(panel.background = element_rect(fill = \"#C7E7FB\", color = \"black\"))"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"datasets contain grid cells covering European land territory, various resolutions 1km 100km. Base statistics population figures provided cells.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"","code":"gisco_get_grid(   resolution = \"20\",   spatialtype = \"REGION\",   cache_dir = NULL,   update_cache = FALSE,   verbose = FALSE )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/grids","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"resolution Resolution grid cells kms. Available values \"1\", \"2\", \"5\", \"10\", \"20\", \"50\", \"100\". See Details spatialtype Select one \"REGION\" \"POINT\". cache_dir path cache directory. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. verbose Logical, displays information. Useful debugging, default FALSE.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"POLYGON/POINT object.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"Files distributed EPSG:3035. file sizes range 428Kb (resolution = \"100\") 1.7Gb resolution = \"1\". resolutions 1km 2km need confirm download.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"specific downloading provisions, please see https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/grids","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"dieghernan, https://github.com/dieghernan/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get grid cells covering covering Europe for various resolutions — gisco_get_grid","text":"","code":"# \\donttest{ grid <- gisco_get_grid(resolution = 20) grid$popdens <- grid$TOT_P_2011 / 20   breaks <-   c(     0,     0.1, # For capturing 0     100,     500,     1000,     2500,     5000,     10000,     25000,     max(grid$popdens) + 1   )  # Cut groups  grid$popdens_cut <- cut(grid$popdens,   breaks = breaks,   include.lowest = TRUE ) cut_labs <- prettyNum(breaks, big.mark = \" \")[-1] cut_labs[1] <- \"0\" cut_labs[9] <- \"> 25 000\"  pal <- c(\"black\", hcl.colors(length(breaks) - 2,   palette = \"Spectral\",   alpha = 0.9 ))  library(ggplot2)  ggplot(grid) +   geom_sf(aes(fill = popdens_cut), color = NA, linewidth = 0) +   coord_sf(     xlim = c(2500000, 7000000),     ylim = c(1500000, 5200000)   ) +   scale_fill_manual(     values = pal, na.value = \"black\",     name = \"people per sq. kilometer\",     labels = cut_labs,     guide = guide_legend(       direction = \"horizontal\",       keyheight = 0.5,       keywidth = 2,       title.position = \"top\",       title.hjust = 0.5,       label.hjust = .5,       nrow = 1,       byrow = TRUE,       reverse = FALSE,       label.position = \"bottom\"     )   ) +   theme_void() +   labs(     title = \"Population density in Europe\",     subtitle = \"Grid: 20 km.\",     caption = gisco_attributions()   ) +   theme(     plot.background = element_rect(fill = \"grey2\"),     plot.title = element_text(       size = 18, color = \"white\",       hjust = 0.5,     ),     plot.subtitle = element_text(       size = 14,       color = \"white\",       hjust = 0.5,       face = \"bold\"     ),     plot.caption = element_text(       size = 9, color = \"grey60\",       hjust = 0.5, vjust = 0,       margin = margin(t = 5, b = 10)     ),     legend.text = element_text(       size = 8,       color = \"white\"     ),     legend.title = element_text(       color = \"white\"     ),     legend.position = \"bottom\"   )  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":null,"dir":"Reference","previous_headings":"","what":"Get locations of healthcare services in Europe. — gisco_get_healthcare","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"dataset contains information main healthcare services considered 'hospitals' Member States.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"","code":"gisco_get_healthcare(   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   verbose = FALSE,   country = NULL )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/healthcare-services","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"cache logical whether caching. Default TRUE. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. cache_dir path cache directory. See caching. verbose Logical, displays information. Useful debugging, default FALSE. country Optional. character vector country codes. either vector country names, vector ISO3 country codes vector Eurostat country codes. Mixed types (c(\"Turkey\",\"US\",\"FRA\")) work. See also countrycode::countrycode().","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"POINT object.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"Files distributed EPSG:4326. Metadata available https://gisco-services.ec.europa.eu/pub/healthcare/metadata.pdf.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"dieghernan, https://github.com/dieghernan/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_healthcare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get locations of healthcare services in Europe. — gisco_get_healthcare","text":"","code":"# \\donttest{  health_BEL <- gisco_get_healthcare(country = \"Belgium\") health_BEL[health_BEL$public_private == \"\", ]$public_private <- \"unknown\" BEL <- gisco_get_nuts(   country = \"Belgium\", nuts_level = 2,   resolution = \"01\" )  library(ggplot2)  ggplot(BEL) +   geom_sf(fill = \"white\", color = \"grey80\") +   geom_sf(     data = health_BEL, aes(color = public_private),     alpha = 0.5, size = 3   ) +   theme_bw() +   labs(     title = \"Healthcare in Belgium\",     subtitle = \"NUTS 2\",     fill = \"type\",     caption = paste0(gisco_attributions())   ) +   scale_color_manual(name = \"type\", values = hcl.colors(3, \"Berlin\")) +   theme_minimal()  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_lau.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","title":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","text":"gisco_get_communes() gisco_get_lau() download shapes Local Urban Areas, correspond roughly towns cities.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_lau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","text":"","code":"gisco_get_communes(   year = \"2016\",   epsg = \"4326\",   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   verbose = FALSE,   spatialtype = \"RG\",   country = NULL )  gisco_get_lau(   year = \"2016\",   epsg = \"4326\",   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   verbose = FALSE,   country = NULL,   gisco_id = NULL )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_lau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","text":"year Release year file. See Details. epsg projection map: 4-digit EPSG code. One : \"4258\": ETRS89 \"4326\": WGS84 \"3035\": ETRS89 / ETRS-LAEA \"3857\": Pseudo-Mercator cache logical whether caching. Default TRUE. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. cache_dir path cache directory. See caching. verbose Logical, displays information. Useful debugging, default FALSE. spatialtype Type geometry returned: \"BN\": Boundaries - LINESTRING object. \"COASTL\": coastlines - LINESTRING object. \"INLAND\": inland boundaries - LINESTRING object. \"LB\": Labels - POINT object. \"RG\": Regions - MULTIPOLYGON/POLYGON object. country Optional. character vector country codes. either vector country names, vector ISO3 country codes vector Eurostat country codes. Mixed types (c(\"Turkey\",\"US\",\"FRA\")) work. See also countrycode::countrycode(). gisco_id Optional. character vector GISCO_ID LAU values.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_lau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","text":"sf object specified spatialtype. case gisco_get_lau(), POLYGON object.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_lau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","text":"Valid years eacg function : gisco_get_communes: one '2001', '2004', '2006', '2008', '2010', '2013' '2016'. gisco_get_lau: one '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_lau.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","text":"Please check download usage provisions gisco_attributions().","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_lau.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_lau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GISCO urban areas sf polygons, points and lines — gisco_get_lau","text":"","code":"# \\donttest{  ire_lau <- gisco_get_communes(spatialtype = \"LB\", country = \"Ireland\")  library(ggplot2)  ggplot(ire_lau) +   geom_sf(shape = 21, col = \"#009A44\", size = 0.5) +   labs(     title = \"Communes in Ireland\",     subtitle = \"Year 2016\",     caption = gisco_attributions()   ) +   theme_void() +   theme(text = element_text(     colour = \"#009A44\",     family = \"serif\", face = \"bold\"   ))  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_nuts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GISCO NUTS sf polygons, points and lines — gisco_get_nuts","title":"Get GISCO NUTS sf polygons, points and lines — gisco_get_nuts","text":"Returns NUTS regions polygons, lines points specified scale, provided GISCO. NUTS provided three different levels: \"0\": Country level \"1\": Groups states/regions \"2\": States/regions \"3\": Counties/provinces/districts Note NUTS-level definition may vary across countries. See also https://ec.europa.eu/eurostat/web/nuts/background.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_nuts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GISCO NUTS sf polygons, points and lines — gisco_get_nuts","text":"","code":"gisco_get_nuts(   year = \"2016\",   epsg = \"4326\",   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   verbose = FALSE,   resolution = \"20\",   spatialtype = \"RG\",   country = NULL,   nuts_id = NULL,   nuts_level = \"all\" )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_nuts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get GISCO NUTS sf polygons, points and lines — gisco_get_nuts","text":"https://gisco-services.ec.europa.eu/distribution/v2/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_nuts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GISCO NUTS sf polygons, points and lines — gisco_get_nuts","text":"year Release year file. One \"2003\", \"2006, \"2010\", \"2013\", \"2016\" \"2021\". epsg projection map: 4-digit EPSG code. One : \"4258\": ETRS89 \"4326\": WGS84 \"3035\": ETRS89 / ETRS-LAEA \"3857\": Pseudo-Mercator cache logical whether caching. Default TRUE. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. cache_dir path cache directory. See caching. verbose Logical, displays information. Useful debugging, default FALSE. resolution Resolution geospatial data. One \"60\": 1:60million \"20\": 1:20million \"10\": 1:10million \"03\": 1:3million \"01\": 1:1million spatialtype Type geometry returned: \"BN\": Boundaries - LINESTRING object. \"LB\": Labels - POINT object. \"RG\": Regions - MULTIPOLYGON/POLYGON object. country Optional. character vector country codes. either vector country names, vector ISO3 country codes vector Eurostat country codes. Mixed types (c(\"Turkey\",\"US\",\"FRA\")) work. See also countrycode::countrycode(). nuts_id Optional. character vector NUTS IDs. nuts_level NUTS level. One \"0\", \"1\", \"2\" \"3\". See Description.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_nuts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GISCO NUTS sf polygons, points and lines — gisco_get_nuts","text":"sf object specified spatialtype.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_nuts.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get GISCO NUTS sf polygons, points and lines — gisco_get_nuts","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_nuts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GISCO NUTS sf polygons, points and lines — gisco_get_nuts","text":"","code":"nuts2 <- gisco_get_nuts(nuts_level = 2)  library(ggplot2)  ggplot(nuts2) +   geom_sf() +   # ETRS89 / ETRS-LAEA   coord_sf(     crs = 3035, xlim = c(2377294, 7453440),     ylim = c(1313597, 5628510)   ) +   labs(title = \"NUTS-2 levels\")  # \\donttest{ # NUTS-3 for Germany germany_nuts3 <- gisco_get_nuts(nuts_level = 3, country = \"Germany\")  ggplot(germany_nuts3) +   geom_sf() +   labs(     title = \"NUTS-3 levels\",     subtitle = \"Germany\",     caption = gisco_attributions()   )    # Select specific regions select_nuts <- gisco_get_nuts(nuts_id = c(\"ES2\", \"FRJ\", \"FRL\", \"ITC\"))  ggplot(select_nuts) +   geom_sf(aes(fill = CNTR_CODE)) +   scale_fill_viridis_d()  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get postal code points from GISCO — gisco_get_postalcodes","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"Get postal codes points EU, EFTA candidate countries.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"","code":"gisco_get_postalcodes(   year = \"2020\",   country = NULL,   cache_dir = NULL,   update_cache = FALSE,   verbose = FALSE )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data/postal-codes","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"year Year reference. Currently \"2020\" available. country Optional. character vector country codes. either vector country names, vector ISO3 country codes vector Eurostat country codes. Mixed types (c(\"Turkey\",\"US\",\"FRA\")) work. See also countrycode::countrycode(). cache_dir path cache directory. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. verbose Logical, displays information. Useful debugging, default FALSE.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"POINT object EPSG:4326.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"postal code point dataset shows location postal codes, NUTS codes Degree Urbanisation classification across EU, EFTA candidate countries variety sources. primary purpose create correspondence tables NUTS classification (EC) 1059/2003 part Tercet Regulation (EU) 2017/2391","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":"copyright","dir":"Reference","previous_headings":"","what":"Copyright","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"dataset released CC--SA-4.0 licence requires following attribution whenever used: (c) European Union - GISCO, 2021, postal code point dataset, Licence CC--SA 4.0 available https://ec.europa.eu/eurostat/web/gisco/geodata/reference-data Shapefiles provided ETRS89 (EPSG:4258).","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_postalcodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get postal code points from GISCO — gisco_get_postalcodes","text":"","code":"# Heavy-weight download! # \\dontrun{  pc_bel <- gisco_get_postalcodes(country = \"BE\")  library(ggplot2)  ggplot(pc_bel) +   geom_sf(color = \"gold\") +   theme_bw() +   labs(     title = \"Postcodes of Belgium\",     subtitle = \"2020\",     caption = paste(\"(c) European Union - GISCO, 2021,\",       \"postal code point dataset\",       \"Licence CC-BY-SA 4.0\",       sep = \"\\n\"     )   )  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Get geospatial units data from GISCO API — gisco_get_units","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"Download individual shapefiles units. Unlike gisco_get_countries(), gisco_get_nuts() gisco_get_urban_audit(), downloads full dataset applies filters, gisco_get_units() downloads single shapefile unit.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"","code":"gisco_get_units(   id_giscoR = \"nuts\",   unit = \"ES4\",   mode = \"sf\",   year = \"2016\",   epsg = \"4326\",   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   verbose = FALSE,   resolution = \"20\",   spatialtype = \"RG\" )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"https://gisco-services.ec.europa.eu/distribution/v2/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"id_giscoR Select unit type downloaded. Accepted values \"nuts\", \"countries\" \"urban_audit\". unit Unit ID downloaded. See Details. mode Controls output function. Possible values \"sf\" \"df\". See Value Details. year Release year file. One \"2001\", \"2006\", \"2010\", \"2013\", \"2016\" \"2020\". epsg projection map: 4-digit EPSG code. One : \"4258\": ETRS89 \"4326\": WGS84 \"3035\": ETRS89 / ETRS-LAEA \"3857\": Pseudo-Mercator cache logical whether caching. Default TRUE. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. cache_dir path cache directory. See caching. verbose Logical, displays information. Useful debugging, default FALSE. resolution Resolution geospatial data. One \"60\": 1:60million \"20\": 1:20million \"10\": 1:10million \"03\": 1:3million \"01\": 1:1million spatialtype Type geometry returned: \"RG\", POLYGON \"LB\" POINT.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"sf object mode = \"sf\" dataframe mode = \"df\".","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"function can return dataframe mode = \"df\" sf object mode = \"sf\". order see available unit ids required combination spatialtype, year, first run function \"df\" mode. get data frame can select required ids unit parameter. mode = \"df\" relevant parameters spatialtype, year.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"Country-level files renamed cache_dir avoid naming conflicts NUTS-0 datasets. Please check download usage provisions gisco_attributions().","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"dieghernan, https://github.com/dieghernan/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get geospatial units data from GISCO API — gisco_get_units","text":"","code":"# \\donttest{ cities <- gisco_get_units(   id_giscoR = \"urban_audit\",   mode = \"df\",   year = \"2020\" ) VAL <- cities[grep(\"Valencia\", cities$URAU_NAME), ] #   Order from big to small VAL <- VAL[order(as.double(VAL$AREA_SQM), decreasing = TRUE), ]  VAL.sf <- gisco_get_units(   id_giscoR = \"urban_audit\",   year = \"2020\",   unit = VAL$URAU_CODE ) # Provincia Provincia <-   gisco_get_units(     id_giscoR = \"nuts\",     unit = c(\"ES523\"),     resolution = \"01\"   )  # Reorder VAL.sf$URAU_CATG <- factor(VAL.sf$URAU_CATG, levels = c(\"F\", \"K\", \"C\"))  # Plot library(ggplot2)  ggplot(Provincia) +   geom_sf(fill = \"gray1\") +   geom_sf(data = VAL.sf, aes(fill = URAU_CATG)) +   scale_fill_viridis_d() +   labs(     title = \"Valencia\",     subtitle = \"Urban Audit\",     fill = \"Urban Audit\\ncategory\"   )  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_urban_audit.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","title":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","text":"Returns polygons points corresponding cities, greater cities metropolitan areas included Urban Audit report Eurostat.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_urban_audit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","text":"","code":"gisco_get_urban_audit(   year = \"2020\",   epsg = \"4326\",   cache = TRUE,   update_cache = FALSE,   cache_dir = NULL,   verbose = FALSE,   spatialtype = \"RG\",   country = NULL,   level = NULL )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_urban_audit.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","text":"https://gisco-services.ec.europa.eu/distribution/v2/","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_urban_audit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","text":"year Release year file. One \"2001\", \"2004\", \"2014\", \"2018\" \"2020\". epsg projection map: 4-digit EPSG code. One : \"4258\": ETRS89 \"4326\": WGS84 \"3035\": ETRS89 / ETRS-LAEA \"3857\": Pseudo-Mercator cache logical whether caching. Default TRUE. See caching. update_cache logical whether update cache. Default FALSE. set TRUE force fresh download source .geojson file. cache_dir path cache directory. See caching. verbose Logical, displays information. Useful debugging, default FALSE. spatialtype Type geometry returned: \"LB\": Labels - POINT object. \"RG\": Regions - MULTIPOLYGON/POLYGON object. country Optional. character vector country codes. either vector country names, vector ISO3 country codes vector Eurostat country codes. Mixed types (c(\"Turkey\",\"US\",\"FRA\")) work. See also countrycode::countrycode(). level Level Urban Audit. Possible values \"CITIES\", \"FUA\", \"GREATER_CITIES\" NULL, download full dataset.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_urban_audit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","text":"sf object specified spatialtype.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_urban_audit.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","text":"Please check download usage provisions gisco_attributions().","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_urban_audit.html","id":"about-caching","dir":"Reference","previous_headings":"","what":"About caching","title":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","text":"can set cache_dir gisco_set_cache_dir(). Sometimes cached files may corrupt. case, try re-downloading data setting update_cache = TRUE. experience problem download, try download corresponding .geojson file method save cache_dir. Use option verbose = TRUE debugging API query. complete list files available check gisco_db.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_get_urban_audit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GISCO greater cities and metropolitan areas sf polygons and points — gisco_get_urban_audit","text":"","code":"# \\donttest{ cities <- gisco_get_urban_audit(year = \"2020\", level = \"CITIES\")  bcn <- cities[cities$URAU_NAME == \"Barcelona\", ]  library(ggplot2) ggplot(bcn) +   geom_sf()  # }"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_nuts.html","id":null,"dir":"Reference","previous_headings":"","what":"All NUTS POLYGON object — gisco_nuts","title":"All NUTS POLYGON object — gisco_nuts","text":"sf object including NUTS levels provided GISCO (2016 version).","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_nuts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All NUTS POLYGON object — gisco_nuts","text":"POLYGON data frame (resolution: 1:20million, EPSG:4326) object 2,016 rows 11 variables: id: row ID COAST_TYPE: COAST_TYPE MOUNT_TYPE: MOUNT_TYPE NAME_LATN: Name Latin characters CNTR_CODE: Eurostat Country code FID: FID NUTS_ID: NUTS identifier NUTS_NAME: NUTS name local alphabet LEVL_CODE: NUTS level code (0,1,2,3) URBN_TYPE: URBN_TYPE geometry: geometry field","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_nuts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"All NUTS POLYGON object — gisco_nuts","text":"NUTS_RG_20M_2016_4326.geojson file.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_nuts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"All NUTS POLYGON object — gisco_nuts","text":"","code":"nuts <- gisco_nuts  italy <- subset(nuts, CNTR_CODE == \"IT\" & LEVL_CODE == 3)  library(ggplot2)  ggplot(italy) +   geom_sf()"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_set_cache_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set your giscoR cache dir — gisco_set_cache_dir","title":"Set your giscoR cache dir — gisco_set_cache_dir","text":"function store cache_dir path local machine load future sessions. Type Sys.getenv(\"GISCO_CACHE_DIR\") find cached path. Alternatively, can store cache_dir manually following options: Run Sys.setenv(GISCO_CACHE_DIR = \"cache_dir\"). need run command session (Similar install = FALSE). Set options(gisco_cache_dir = \"cache_dir\"). Similar previous option. recommended , provided backwards compatibility purposes. Write line .Renviron file: GISCO_CACHE_DIR = \"value_for_cache_dir\" (behavior install = TRUE). store cache_dir permanently.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_set_cache_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set your giscoR cache dir — gisco_set_cache_dir","text":"","code":"gisco_set_cache_dir(   cache_dir,   overwrite = FALSE,   install = FALSE,   verbose = TRUE )"},{"path":"https://ropengov.github.io/giscoR/reference/gisco_set_cache_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set your giscoR cache dir — gisco_set_cache_dir","text":"cache_dir path cache directory. missing value function store cached files temporary dir (See base::tempdir()). overwrite set TRUE, overwrite existing GISCO_CACHE_DIR already local machine. install TRUE, install key local machine use future sessions.  Defaults FALSE. cache_dir FALSE parameter set FALSE automatically. verbose Logical, displays information. Useful debugging, default FALSE.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/gisco_set_cache_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set your giscoR cache dir — gisco_set_cache_dir","text":"(invisible) character path cache_dir.","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/gisco_set_cache_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set your giscoR cache dir — gisco_set_cache_dir","text":"","code":"# Don't run this! It would modify your current state # \\dontrun{ gisco_set_cache_dir(verbose = TRUE) #> Using a temporary cache dir.  Set 'cache_dir' to a value for store permanently #> giscoR cache dir is:  /tmp/RtmpxHuSGi/giscoR # }  Sys.getenv(\"GISCO_CACHE_DIR\") #> [1] \"/tmp/RtmpxHuSGi/giscoR\""},{"path":"https://ropengov.github.io/giscoR/reference/tgs00026.html","id":null,"dir":"Reference","previous_headings":"","what":"Disposable income of private households by NUTS 2 regions — tgs00026","title":"Disposable income of private households by NUTS 2 regions — tgs00026","text":"disposable income private households balance primary income (operating surplus/mixed income plus compensation employees plus property income received minus property income paid) redistribution income cash. transactions comprise social contributions paid, social benefits cash received, current taxes income wealth paid, well current transfers. Disposable income include social transfers kind coming public administrations non-profit institutions serving households.","code":""},{"path":"https://ropengov.github.io/giscoR/reference/tgs00026.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Disposable income of private households by NUTS 2 regions — tgs00026","text":"data_frame: geo: NUTS2 identifier time: reference year (2007 2018) values: value euros","code":""},{"path":"https://ropengov.github.io/giscoR/reference/tgs00026.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Disposable income of private households by NUTS 2 regions — tgs00026","text":"https://ec.europa.eu/eurostat, extracted 2020-10-27","code":""},{"path":[]},{"path":"https://ropengov.github.io/giscoR/reference/tgs00026.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disposable income of private households by NUTS 2 regions — tgs00026","text":"","code":"data(tgs00026)"},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-033","dir":"Changelog","previous_headings":"","what":"giscoR 0.3.3","title":"giscoR 0.3.3","text":"CRAN release: 2023-02-16 Fix broken urls gisco_get_healthcare() (#51).","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-032","dir":"Changelog","previous_headings":"","what":"giscoR 0.3.2","title":"giscoR 0.3.2","text":"CRAN release: 2022-08-13 Fix HTML5 issue requested CRAN.","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-031","dir":"Changelog","previous_headings":"","what":"giscoR 0.3.1","title":"giscoR 0.3.1","text":"CRAN release: 2021-10-06 Add Copyright DESCRIPTION. Add lwgeom Suggests. gisco_get_airports() gisco_get_ports(): year available 2013. Now information downloaded instead using internal data. New function: gisco_get_postalcodes(). Update gisco_db.","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-030","dir":"Changelog","previous_headings":"","what":"giscoR 0.3.0","title":"giscoR 0.3.0","text":"CRAN release: 2021-09-27 Now giscoR part rOpenGov. Repo transferred. Caching improvements: new function gisco_set_cache_dir() based rappdirs::user_cache_dir(). Now cache_dir path stored necessary set new session. Also added gisco_clear_cache(). Fix error cache = FALSE. Now files loaded instead throwing error. New tests testthat. Update docs. New examples Refactor documents codes previous gisco_get doc. Add eurostat package Suggests. lwgeom dependency removed. Update internal grid object. tmap package replaced ggplot2 vignettes examples.","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-024","dir":"Changelog","previous_headings":"","what":"giscoR 0.2.4","title":"giscoR 0.2.4","text":"CRAN release: 2021-04-13 New eu field giscoR::gisco_countrycode. Fix typos documentation Include vignette package Move docs markdown/roxygen lwgeom moved Import field. cartography package replaced tmap vignettes.","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-023","dir":"Changelog","previous_headings":"","what":"giscoR 0.2.3","title":"giscoR 0.2.3","text":"Update docs Release DOI","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-022","dir":"Changelog","previous_headings":"","what":"giscoR 0.2.2","title":"giscoR 0.2.2","text":"CRAN release: 2020-11-23 Remove vignette","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-021","dir":"Changelog","previous_headings":"","what":"giscoR 0.2.1","title":"giscoR 0.2.1","text":"Remove CRAN notes. Improve docs. Fix CRAN checks.","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-020","dir":"Changelog","previous_headings":"","what":"giscoR 0.2.0","title":"giscoR 0.2.0","text":"CRAN release: 2020-11-12 Remove colorspace dependency. Bump R minimal version 3.6.0. Change order parameters gisco_get() functions. Rewriting internal functions utils. Add verbose parameter functions. Rewriting giscoR::gisco_db. Functions added: gisco_bulk_download() gisco_check_access() gisco_get_airports() gisco_get_grid() gisco_get_ports() gisco_get_units() Now gisco_get_countries() gisco_get_nuts() uses gisco_get_units() individual files, making call much faster.","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-011","dir":"Changelog","previous_headings":"","what":"giscoR 0.1.1","title":"giscoR 0.1.1","text":"CRAN release: 2020-10-28 Added giscoR::tgs00026 dataset. Remove eurostat dependency.","code":""},{"path":"https://ropengov.github.io/giscoR/news/index.html","id":"giscor-010","dir":"Changelog","previous_headings":"","what":"giscoR 0.1.0","title":"giscoR 0.1.0","text":"CRAN release: 2020-10-13 First stable release.","code":""}]
